---
layout: post
category: "design"
title:  "适配器"
tags: [design]
---
把一个橙子适配成苹果。adapter持有一个橙子，继承apple接口。就好像给orange加了个apple的皮。
![p1](http://www.programcreek.com/wp-content/uploads/2011/09/SimpleAdapter.jpg)

![p2](http://www.programcreek.com/wp-content/uploads/2011/09/adapter-pattern-class-diagram.jpg)

<pre>
class Apple {
    public void getAColor(String str) {
        System.out.println("Apple color is: " + str);
    }
}
 
class Orange {
    public void getOColor(String str) {
        System.out.println("Orange color is: " + str);
    }
}
 
class AppleAdapter extends Apple {
    private Orange orange;
 
    public AppleAdapter(Orange orange) {
        this.orange = orange;
    }
 
    public void getAColor(String str) {
        orange.getOColor(str);
    }
}
 
public class TestAdapter {
    public static void main(String[] args) {
        Apple apple1 = new Apple();
        Apple apple2 = new Apple();
        apple1.getAColor("green");
 
        Orange orange = new Orange();
 
        AppleAdapter aa = new AppleAdapter(orange);
        aa.getAColor("red");
    }
 
}
</pre>

实际上，双通道的适配器更常用，要实现他，需要继承2个接口并持有2个实例。

jdk中 的适配器：

java.io.InputStreamReader(InputStream) (returns a Reader)
java.io.OutputStreamWriter(OutputStream) (returns a Writer)


